version: '3.8'
services:
  db:
    container_name: amplify_db
    image: mariadb:10.10
    ports:
      - "13306:3306"
    volumes:
      - .data/mariadb:/var/lib/mysql
      - ./docker/mariadb/custom.cnf:/etc/mysql/conf.d/custom.cnf
      - ./docker/mariadb/init:/docker-entrypoint-initdb.d
      # HACK: easy sql script running for setting up db
      - ./amplify-data.sql:/amplify-data.sql
      - ./amplify-schema.sql:/amplify-schema.sql
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_DATABASE: amplify
      MARIADB_USER: amplify
      MARIADB_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "mysql amplify -u amplify -ppassword -e 'SELECT 1;'  || exit 1"]
      interval: 2s
      retries: 120

  app: &app
    container_name: amplify_app
    # image: dhil/amplify
    build:
      context: .
      target: amplify
    ports:
      - "8080:80"
    volumes:
      # code for development
      - .:/var/www/html

      # persist file uploads in .data
      - .data/app/data:/var/www/html/data
      - .data/app/tinymce:/var/www/html/public/uploads/tinymce
      - .data/app/var:/var/www/html/var

      # ignore local environment files. Allows you to run the app on your local machine as well via the local overrides
      - ./docker/app/null:/var/www/html/.env.local
      - ./docker/app/null:/var/www/html/.env.dev.local
      - ./docker/app/null:/var/www/html/.env.test.local

      # use the container's node_modules & vendor folders (don't override)
      - /var/www/html/public/node_modules
      - /var/www/html/public/bundles
      - /var/www/html/vendor
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost/health.php || exit 1"]
      interval: 2s
      retries: 120
    depends_on:
      db:
        condition: service_healthy

  worker:
    <<: *app
    container_name: amplify_worker
    command: php bin/console messenger:consume async -vv
    ports: []
    healthcheck: {}
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy

  mail:
    container_name: amplify_mail
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"