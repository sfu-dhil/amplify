<?php

declare(strict_types=1);

namespace App\Config;

enum ContributorRole : string {
    case abr = 'abr';
    case act = 'act';
    case adp = 'adp';
    case rcp = 'rcp';
    case anl = 'anl';
    case anm = 'anm';
    case ann = 'ann';
    case anc = 'anc';
    case apl = 'apl';
    case ape = 'ape';
    case app = 'app';
    case arc = 'arc';
    case arr = 'arr';
    case acp = 'acp';
    case adi = 'adi';
    case art = 'art';
    case ard = 'ard';
    case asg = 'asg';
    case asn = 'asn';
    case att = 'att';
    case auc = 'auc';
    case aue = 'aue';
    case aup = 'aup';
    case aut = 'aut';
    case aqt = 'aqt';
    case aft = 'aft';
    case aud = 'aud';
    case aui = 'aui';
    case ato = 'ato';
    case ant = 'ant';
    case bnd = 'bnd';
    case bdd = 'bdd';
    case blw = 'blw';
    case bka = 'bka';
    case bkd = 'bkd';
    case bkp = 'bkp';
    case bjd = 'bjd';
    case bpd = 'bpd';
    case bsl = 'bsl';
    case brl = 'brl';
    case brd = 'brd';
    case cll = 'cll';
    case cop = 'cop';
    case ctg = 'ctg';
    case cas = 'cas';
    case cad = 'cad';
    case cns = 'cns';
    case chr = 'chr';
    case cng = 'cng';
    case cli = 'cli';
    case cor = 'cor';
    case col = 'col';
    case clt = 'clt';
    case clr = 'clr';
    case cmm = 'cmm';
    case cwt = 'cwt';
    case com = 'com';
    case cpl = 'cpl';
    case cpt = 'cpt';
    case cpe = 'cpe';
    case cmp = 'cmp';
    case cmt = 'cmt';
    case ccp = 'ccp';
    case cnd = 'cnd';
    case con = 'con';
    case csl = 'csl';
    case csp = 'csp';
    case cos = 'cos';
    case cot = 'cot';
    case coe = 'coe';
    case cts = 'cts';
    case ctt = 'ctt';
    case cte = 'cte';
    case ctr = 'ctr';
    case ctb = 'ctb';
    case cpc = 'cpc';
    case cph = 'cph';
    case crr = 'crr';
    case crp = 'crp';
    case cst = 'cst';
    case cou = 'cou';
    case crt = 'crt';
    case cov = 'cov';
    case cre = 'cre';
    case cur = 'cur';
    case dnc = 'dnc';
    case dtc = 'dtc';
    case dtm = 'dtm';
    case dte = 'dte';
    case dto = 'dto';
    case dfd = 'dfd';
    case dft = 'dft';
    case dfe = 'dfe';
    case dgc = 'dgc';
    case dgg = 'dgg';
    case dgs = 'dgs';
    case dln = 'dln';
    case dpc = 'dpc';
    case dpt = 'dpt';
    case dsr = 'dsr';
    case drt = 'drt';
    case dis = 'dis';
    case dbp = 'dbp';
    case djo = 'djo';
    case dnr = 'dnr';
    case drm = 'drm';
    case dbd = 'dbd';
    case dub = 'dub';
    case edt = 'edt';
    case edc = 'edc';
    case edm = 'edm';
    case edd = 'edd';
    case elg = 'elg';
    case elt = 'elt';
    case enj = 'enj';
    case eng = 'eng';
    case egr = 'egr';
    case etr = 'etr';
    case evp = 'evp';
    case exp = 'exp';
    case fac = 'fac';
    case fld = 'fld';
    case fmd = 'fmd';
    case fds = 'fds';
    case flm = 'flm';
    case fmp = 'fmp';
    case fmk = 'fmk';
    case fpy = 'fpy';
    case frg = 'frg';
    case fmo = 'fmo';
    case fon = 'fon';
    case fnd = 'fnd';
    case gis = 'gis';
    case hnr = 'hnr';
    case hst = 'hst';
    case his = 'his';
    case ilu = 'ilu';
    case ill = 'ill';
    case ins = 'ins';
    case itr = 'itr';
    case ive = 'ive';
    case ivr = 'ivr';
    case inv = 'inv';
    case isb = 'isb';
    case jud = 'jud';
    case jug = 'jug';
    case lbr = 'lbr';
    case ldr = 'ldr';
    case lsa = 'lsa';
    case led = 'led';
    case len = 'len';
    case lil = 'lil';
    case lit = 'lit';
    case lie = 'lie';
    case lel = 'lel';
    case let = 'let';
    case lee = 'lee';
    case lbt = 'lbt';
    case lse = 'lse';
    case lso = 'lso';
    case lgd = 'lgd';
    case ltg = 'ltg';
    case lyr = 'lyr';
    case mka = 'mka';
    case mfp = 'mfp';
    case mfr = 'mfr';
    case mrb = 'mrb';
    case mrk = 'mrk';
    case med = 'med';
    case mdc = 'mdc';
    case mte = 'mte';
    case mtk = 'mtk';
    case mxe = 'mxe';
    case mod = 'mod';
    case mon = 'mon';
    case mcp = 'mcp';
    case mup = 'mup';
    case msd = 'msd';
    case mus = 'mus';
    case nrt = 'nrt';
    case nan = 'nan';
    case onp = 'onp';
    case osp = 'osp';
    case opn = 'opn';
    case orm = 'orm';
    case org = 'org';
    case oth = 'oth';
    case own = 'own';
    case pan = 'pan';
    case ppm = 'ppm';
    case pta = 'pta';
    case pth = 'pth';
    case pat = 'pat';
    case prf = 'prf';
    case pma = 'pma';
    case pht = 'pht';
    case pad = 'pad';
    case ptf = 'ptf';
    case ptt = 'ptt';
    case pte = 'pte';
    case plt = 'plt';
    case pra = 'pra';
    case pre = 'pre';
    case prt = 'prt';
    case pop = 'pop';
    case prm = 'prm';
    case prc = 'prc';
    case pro = 'pro';
    case prn = 'prn';
    case prs = 'prs';
    case pmn = 'pmn';
    case prd = 'prd';
    case prp = 'prp';
    case prg = 'prg';
    case pdr = 'pdr';
    case pfr = 'pfr';
    case prv = 'prv';
    case pup = 'pup';
    case pbl = 'pbl';
    case pbd = 'pbd';
    case ppt = 'ppt';
    case rdd = 'rdd';
    case rpc = 'rpc';
    case rap = 'rap';
    case rce = 'rce';
    case rcd = 'rcd';
    case red = 'red';
    case rxa = 'rxa';
    case ren = 'ren';
    case rpt = 'rpt';
    case rps = 'rps';
    case rth = 'rth';
    case rtm = 'rtm';
    case res = 'res';
    case rsp = 'rsp';
    case rst = 'rst';
    case rse = 'rse';
    case rpy = 'rpy';
    case rsg = 'rsg';
    case rsr = 'rsr';
    case rev = 'rev';
    case rbr = 'rbr';
    case sce = 'sce';
    case sad = 'sad';
    case aus = 'aus';
    case scr = 'scr';
    case scl = 'scl';
    case spy = 'spy';
    case sec = 'sec';
    case sll = 'sll';
    case std = 'std';
    case stg = 'stg';
    case sgn = 'sgn';
    case sng = 'sng';
    case swd = 'swd';
    case sds = 'sds';
    case sde = 'sde';
    case spk = 'spk';
    case sfx = 'sfx';
    case spn = 'spn';
    case sgd = 'sgd';
    case stm = 'stm';
    case stn = 'stn';
    case str = 'str';
    case stl = 'stl';
    case sht = 'sht';
    case srv = 'srv';
    case tch = 'tch';
    case tcd = 'tcd';
    case tld = 'tld';
    case tlg = 'tlg';
    case tlh = 'tlh';
    case tlp = 'tlp';
    case tau = 'tau';
    case ths = 'ths';
    case trc = 'trc';
    case trl = 'trl';
    case tyd = 'tyd';
    case tyg = 'tyg';
    case uvp = 'uvp';
    case vdg = 'vdg';
    case vfx = 'vfx';
    case vac = 'vac';
    case wit = 'wit';
    case wde = 'wde';
    case wdc = 'wdc';
    case wam = 'wam';
    case wac = 'wac';
    case wal = 'wal';
    case wat = 'wat';
    case win = 'win';
    case wpr = 'wpr';
    case wst = 'wst';

    public function label() : string {
        return match ($this) {
            self::abr => 'Abridger',
            self::act => 'Actor',
            self::adp => 'Adapter',
            self::rcp => 'Addressee',
            self::anl => 'Analyst',
            self::anm => 'Animator',
            self::ann => 'Annotator',
            self::anc => 'Announcer',
            self::apl => 'Appellant',
            self::ape => 'Appellee',
            self::app => 'Applicant',
            self::arc => 'Architect',
            self::arr => 'Arranger',
            self::acp => 'Art copyist',
            self::adi => 'Art director',
            self::art => 'Artist',
            self::ard => 'Artistic director',
            self::asg => 'Assignee',
            self::asn => 'Associated name',
            self::att => 'Attributed name',
            self::auc => 'Auctioneer',
            self::aue => 'Audio engineer',
            self::aup => 'Audio producer',
            self::aut => 'Author',
            self::aqt => 'Author in quotations or text abstracts',
            self::aft => 'Author of afterword, colophon, etc.',
            self::aud => 'Author of dialog',
            self::aui => 'Author of introduction, etc.',
            self::ato => 'Autographer',
            self::ant => 'Bibliographic antecedent',
            self::bnd => 'Binder',
            self::bdd => 'Binding designer',
            self::blw => 'Blurb writer',
            self::bka => 'Book artist',
            self::bkd => 'Book designer',
            self::bkp => 'Book producer',
            self::bjd => 'Bookjacket designer',
            self::bpd => 'Bookplate designer',
            self::bsl => 'Bookseller',
            self::brl => 'Braille embosser',
            self::brd => 'Broadcaster',
            self::cll => 'Calligrapher',
            self::cop => 'Camera operator',
            self::ctg => 'Cartographer',
            self::cas => 'Caster',
            self::cad => 'Casting director',
            self::cns => 'Censor',
            self::chr => 'Choreographer',
            self::cng => 'Cinematographer',
            self::cli => 'Client',
            self::cor => 'Collection registrar',
            self::col => 'Collector',
            self::clt => 'Collotyper',
            self::clr => 'Colorist',
            self::cmm => 'Commentator',
            self::cwt => 'Commentator for written text',
            self::com => 'Compiler',
            self::cpl => 'Complainant',
            self::cpt => 'Complainant-appellant',
            self::cpe => 'Complainant-appellee',
            self::cmp => 'Composer',
            self::cmt => 'Compositor',
            self::ccp => 'Conceptor',
            self::cnd => 'Conductor',
            self::con => 'Conservator',
            self::csl => 'Consultant',
            self::csp => 'Consultant to a project',
            self::cos => 'Contestant',
            self::cot => 'Contestant-appellant',
            self::coe => 'Contestant-appellee',
            self::cts => 'Contestee',
            self::ctt => 'Contestee-appellant',
            self::cte => 'Contestee-appellee',
            self::ctr => 'Contractor',
            self::ctb => 'Contributor',
            self::cpc => 'Copyright claimant',
            self::cph => 'Copyright holder',
            self::crr => 'Corrector',
            self::crp => 'Correspondent',
            self::cst => 'Costume designer',
            self::cou => 'Court governed',
            self::crt => 'Court reporter',
            self::cov => 'Cover designer',
            self::cre => 'Creator',
            self::cur => 'Curator',
            self::dnc => 'Dancer',
            self::dtc => 'Data contributor',
            self::dtm => 'Data manager',
            self::dte => 'Dedicatee',
            self::dto => 'Dedicator',
            self::dfd => 'Defendant',
            self::dft => 'Defendant-appellant',
            self::dfe => 'Defendant-appellee',
            self::dgc => 'Degree committee member',
            self::dgg => 'Degree granting institution',
            self::dgs => 'Degree supervisor',
            self::dln => 'Delineator',
            self::dpc => 'Depicted',
            self::dpt => 'Depositor',
            self::dsr => 'Designer',
            self::drt => 'Director',
            self::dis => 'Dissertant',
            self::dbp => 'Distribution place',
            self::djo => 'DJ',
            self::dnr => 'Donor',
            self::drm => 'Draftsman',
            self::dbd => 'Dubbing director',
            self::dub => 'Dubious author',
            self::edt => 'Editor',
            self::edc => 'Editor of compilation',
            self::edm => 'Editor of moving image work',
            self::edd => 'Editorial director',
            self::elg => 'Electrician',
            self::elt => 'Electrotyper',
            self::enj => 'Enacting jurisdiction',
            self::eng => 'Engineer',
            self::egr => 'Engraver',
            self::etr => 'Etcher',
            self::evp => 'Event place',
            self::exp => 'Expert',
            self::fac => 'Facsimilist',
            self::fld => 'Field director',
            self::fmd => 'Film director',
            self::fds => 'Film distributor',
            self::flm => 'Film editor',
            self::fmp => 'Film producer',
            self::fmk => 'Filmmaker',
            self::fpy => 'First party',
            self::frg => 'Forger',
            self::fmo => 'Former owner',
            self::fon => 'Founder',
            self::fnd => 'Funder',
            self::gis => 'Geographic information specialist',
            self::hnr => 'Honoree',
            self::hst => 'Host',
            self::his => 'Host institution',
            self::ilu => 'Illuminator',
            self::ill => 'Illustrator',
            self::ins => 'Inscriber',
            self::itr => 'Instrumentalist',
            self::ive => 'Interviewee',
            self::ivr => 'Interviewer',
            self::inv => 'Inventor',
            self::isb => 'Issuing body',
            self::jud => 'Judge',
            self::jug => 'Jurisdiction governed',
            self::lbr => 'Laboratory',
            self::ldr => 'Laboratory director',
            self::lsa => 'Landscape architect',
            self::led => 'Lead',
            self::len => 'Lender',
            self::lil => 'Libelant',
            self::lit => 'Libelant-appellant',
            self::lie => 'Libelant-appellee',
            self::lel => 'Libelee',
            self::let => 'Libelee-appellant',
            self::lee => 'Libelee-appellee',
            self::lbt => 'Librettist',
            self::lse => 'Licensee',
            self::lso => 'Licensor',
            self::lgd => 'Lighting designer',
            self::ltg => 'Lithographer',
            self::lyr => 'Lyricist',
            self::mka => 'Makeup artist',
            self::mfp => 'Manufacture place',
            self::mfr => 'Manufacturer',
            self::mrb => 'Marbler',
            self::mrk => 'Markup editor',
            self::med => 'Medium',
            self::mdc => 'Metadata contact',
            self::mte => 'Metal-engraver',
            self::mtk => 'Minute taker',
            self::mxe => 'Mixing engineer',
            self::mod => 'Moderator',
            self::mon => 'Monitor',
            self::mcp => 'Music copyist',
            self::mup => 'Music programmer',
            self::msd => 'Musical director',
            self::mus => 'Musician',
            self::nrt => 'Narrator',
            self::nan => 'News anchor',
            self::onp => 'Onscreen participant',
            self::osp => 'Onscreen presenter',
            self::opn => 'Opponent',
            self::orm => 'Organizer',
            self::org => 'Originator',
            self::oth => 'Other',
            self::own => 'Owner',
            self::pan => 'Panelist',
            self::ppm => 'Papermaker',
            self::pta => 'Patent applicant',
            self::pth => 'Patent holder',
            self::pat => 'Patron',
            self::prf => 'Performer',
            self::pma => 'Permitting agency',
            self::pht => 'Photographer',
            self::pad => 'Place of address',
            self::ptf => 'Plaintiff',
            self::ptt => 'Plaintiff-appellant',
            self::pte => 'Plaintiff-appellee',
            self::plt => 'Platemaker',
            self::pra => 'Praeses',
            self::pre => 'Presenter',
            self::prt => 'Printer',
            self::pop => 'Printer of plates',
            self::prm => 'Printmaker',
            self::prc => 'Process contact',
            self::pro => 'Producer',
            self::prn => 'Production company',
            self::prs => 'Production designer',
            self::pmn => 'Production manager',
            self::prd => 'Production personnel',
            self::prp => 'Production place',
            self::prg => 'Programmer',
            self::pdr => 'Project director',
            self::pfr => 'Proofreader',
            self::prv => 'Provider',
            self::pup => 'Publication place',
            self::pbl => 'Publisher',
            self::pbd => 'Publishing director',
            self::ppt => 'Puppeteer',
            self::rdd => 'Radio director',
            self::rpc => 'Radio producer',
            self::rap => 'Rapporteur',
            self::rce => 'Recording engineer',
            self::rcd => 'Recordist',
            self::red => 'Redaktor',
            self::rxa => 'Remix artist',
            self::ren => 'Renderer',
            self::rpt => 'Reporter',
            self::rps => 'Repository',
            self::rth => 'Research team head',
            self::rtm => 'Research team member',
            self::res => 'Researcher',
            self::rsp => 'Respondent',
            self::rst => 'Respondent-appellant',
            self::rse => 'Respondent-appellee',
            self::rpy => 'Responsible party',
            self::rsg => 'Restager',
            self::rsr => 'Restorationist',
            self::rev => 'Reviewer',
            self::rbr => 'Rubricator',
            self::sce => 'Scenarist',
            self::sad => 'Scientific advisor',
            self::aus => 'Screenwriter',
            self::scr => 'Scribe',
            self::scl => 'Sculptor',
            self::spy => 'Second party',
            self::sec => 'Secretary',
            self::sll => 'Seller',
            self::std => 'Set designer',
            self::stg => 'Setting',
            self::sgn => 'Signer',
            self::sng => 'Singer',
            self::swd => 'Software developer',
            self::sds => 'Sound designer',
            self::sde => 'Sound engineer',
            self::spk => 'Speaker',
            self::sfx => 'Special effects provider',
            self::spn => 'Sponsor',
            self::sgd => 'Stage director',
            self::stm => 'Stage manager',
            self::stn => 'Standards body',
            self::str => 'Stereotyper',
            self::stl => 'Storyteller',
            self::sht => 'Supporting host',
            self::srv => 'Surveyor',
            self::tch => 'Teacher',
            self::tcd => 'Technical director',
            self::tld => 'Television director',
            self::tlg => 'Television guest',
            self::tlh => 'Television host',
            self::tlp => 'Television producer',
            self::tau => 'Television writer',
            self::ths => 'Thesis advisor',
            self::trc => 'Transcriber',
            self::trl => 'Translator',
            self::tyd => 'Type designer',
            self::tyg => 'Typographer',
            self::uvp => 'University place',
            self::vdg => 'Videographer',
            self::vfx => 'Visual effects provider',
            self::vac => 'Voice actor',
            self::wit => 'Witness',
            self::wde => 'Wood engraver',
            self::wdc => 'Woodcutter',
            self::wam => 'Writer of accompanying material',
            self::wac => 'Writer of added commentary',
            self::wal => 'Writer of added lyrics',
            self::wat => 'Writer of added text',
            self::win => 'Writer of introduction',
            self::wpr => 'Writer of preface',
            self::wst => 'Writer of supplementary textual content',
        };
    }
}
